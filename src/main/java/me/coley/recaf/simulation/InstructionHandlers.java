package me.coley.recaf.simulation;

import me.coley.recaf.simulation.instructions.InstructionHandlerAddDouble;
import me.coley.recaf.simulation.instructions.InstructionHandlerAddFloat;
import me.coley.recaf.simulation.instructions.InstructionHandlerAddInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerAddLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerAndInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerAndLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerBiPush;
import me.coley.recaf.simulation.instructions.InstructionHandlerConstNull;
import me.coley.recaf.simulation.instructions.InstructionHandlerDConst0;
import me.coley.recaf.simulation.instructions.InstructionHandlerDConst1;
import me.coley.recaf.simulation.instructions.InstructionHandlerDivDouble;
import me.coley.recaf.simulation.instructions.InstructionHandlerDivFloat;
import me.coley.recaf.simulation.instructions.InstructionHandlerDivInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerDivLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerDoubleToFloat;
import me.coley.recaf.simulation.instructions.InstructionHandlerDoubleToInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerDoubleToLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerDup;
import me.coley.recaf.simulation.instructions.InstructionHandlerDup2;
import me.coley.recaf.simulation.instructions.InstructionHandlerDup2X1;
import me.coley.recaf.simulation.instructions.InstructionHandlerDup2X2;
import me.coley.recaf.simulation.instructions.InstructionHandlerDupX1;
import me.coley.recaf.simulation.instructions.InstructionHandlerDupX2;
import me.coley.recaf.simulation.instructions.InstructionHandlerFConst0;
import me.coley.recaf.simulation.instructions.InstructionHandlerFConst1;
import me.coley.recaf.simulation.instructions.InstructionHandlerFConst2;
import me.coley.recaf.simulation.instructions.InstructionHandlerFloatToDouble;
import me.coley.recaf.simulation.instructions.InstructionHandlerFloatToInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerFloatToLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerIConst0;
import me.coley.recaf.simulation.instructions.InstructionHandlerIConst1;
import me.coley.recaf.simulation.instructions.InstructionHandlerIConst2;
import me.coley.recaf.simulation.instructions.InstructionHandlerIConst3;
import me.coley.recaf.simulation.instructions.InstructionHandlerIConst4;
import me.coley.recaf.simulation.instructions.InstructionHandlerIConst5;
import me.coley.recaf.simulation.instructions.InstructionHandlerIConstM1;
import me.coley.recaf.simulation.instructions.InstructionHandlerIncInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerIntToByte;
import me.coley.recaf.simulation.instructions.InstructionHandlerIntToChar;
import me.coley.recaf.simulation.instructions.InstructionHandlerIntToDouble;
import me.coley.recaf.simulation.instructions.InstructionHandlerIntToFloat;
import me.coley.recaf.simulation.instructions.InstructionHandlerIntToLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerIntToShort;
import me.coley.recaf.simulation.instructions.InstructionHandlerLConst0;
import me.coley.recaf.simulation.instructions.InstructionHandlerLConst1;
import me.coley.recaf.simulation.instructions.InstructionHandlerLdc;
import me.coley.recaf.simulation.instructions.InstructionHandlerLoad;
import me.coley.recaf.simulation.instructions.InstructionHandlerLoadArray;
import me.coley.recaf.simulation.instructions.InstructionHandlerLoadArrayByte;
import me.coley.recaf.simulation.instructions.InstructionHandlerLoadArrayChar;
import me.coley.recaf.simulation.instructions.InstructionHandlerLoadArrayDouble;
import me.coley.recaf.simulation.instructions.InstructionHandlerLoadArrayFloat;
import me.coley.recaf.simulation.instructions.InstructionHandlerLoadArrayInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerLoadArrayLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerLoadArrayShort;
import me.coley.recaf.simulation.instructions.InstructionHandlerLoadDouble;
import me.coley.recaf.simulation.instructions.InstructionHandlerLoadFloat;
import me.coley.recaf.simulation.instructions.InstructionHandlerLoadInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerLoadLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerLongToDouble;
import me.coley.recaf.simulation.instructions.InstructionHandlerLongToFloat;
import me.coley.recaf.simulation.instructions.InstructionHandlerLongToInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerMulDouble;
import me.coley.recaf.simulation.instructions.InstructionHandlerMulFloat;
import me.coley.recaf.simulation.instructions.InstructionHandlerMulInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerMulLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerNegativeDouble;
import me.coley.recaf.simulation.instructions.InstructionHandlerNegativeFloat;
import me.coley.recaf.simulation.instructions.InstructionHandlerNegativeInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerNegativeLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerNop;
import me.coley.recaf.simulation.instructions.InstructionHandlerOrInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerOrLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerPop;
import me.coley.recaf.simulation.instructions.InstructionHandlerPop2;
import me.coley.recaf.simulation.instructions.InstructionHandlerRemDouble;
import me.coley.recaf.simulation.instructions.InstructionHandlerRemFloat;
import me.coley.recaf.simulation.instructions.InstructionHandlerRemInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerRemLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerShlInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerShlLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerShrInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerShrLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerSiPush;
import me.coley.recaf.simulation.instructions.InstructionHandlerStore;
import me.coley.recaf.simulation.instructions.InstructionHandlerStoreDouble;
import me.coley.recaf.simulation.instructions.InstructionHandlerStoreFloat;
import me.coley.recaf.simulation.instructions.InstructionHandlerStoreInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerStoreLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerSubDouble;
import me.coley.recaf.simulation.instructions.InstructionHandlerSubFloat;
import me.coley.recaf.simulation.instructions.InstructionHandlerSubInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerSubLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerSwap;
import me.coley.recaf.simulation.instructions.InstructionHandlerUShrInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerUShrLong;
import me.coley.recaf.simulation.instructions.InstructionHandlerXorInt;
import me.coley.recaf.simulation.instructions.InstructionHandlerXorLong;

import static org.objectweb.asm.Opcodes.*;

final class InstructionHandlers {
	private static final InstructionHandler[] HANDLERS;

	private InstructionHandlers() {
	}

	static InstructionHandler getHandlerForOpcode(int opcode) {
		return HANDLERS[opcode];
	}

	static {
		InstructionHandler[] handlers = new InstructionHandler[199];
		handlers[NOP] = new InstructionHandlerNop();
		handlers[ACONST_NULL] = new InstructionHandlerConstNull();
		handlers[ICONST_M1] = new InstructionHandlerIConstM1();
		handlers[ICONST_0] = new InstructionHandlerIConst0();
		handlers[ICONST_1] = new InstructionHandlerIConst1();
		handlers[ICONST_2] = new InstructionHandlerIConst2();
		handlers[ICONST_3] = new InstructionHandlerIConst3();
		handlers[ICONST_4] = new InstructionHandlerIConst4();
		handlers[ICONST_5] = new InstructionHandlerIConst5();
		handlers[LCONST_0] = new InstructionHandlerLConst0();
		handlers[LCONST_1] = new InstructionHandlerLConst1();
		handlers[FCONST_0] = new InstructionHandlerFConst0();
		handlers[FCONST_1] = new InstructionHandlerFConst1();
		handlers[FCONST_2] = new InstructionHandlerFConst2();
		handlers[DCONST_0] = new InstructionHandlerDConst0();
		handlers[DCONST_1] = new InstructionHandlerDConst1();
		handlers[BIPUSH] = new InstructionHandlerBiPush();
		handlers[SIPUSH] = new InstructionHandlerSiPush();
		handlers[LDC] = new InstructionHandlerLdc();
		handlers[ILOAD] = new InstructionHandlerLoadInt();
		handlers[LLOAD] = new InstructionHandlerLoadLong();
		handlers[FLOAD] = new InstructionHandlerLoadFloat();
		handlers[DLOAD] = new InstructionHandlerLoadDouble();
		handlers[ALOAD] = new InstructionHandlerLoad();
		handlers[IALOAD] = new InstructionHandlerLoadArrayInt();
		handlers[LALOAD] = new InstructionHandlerLoadArrayLong();
		handlers[FALOAD] = new InstructionHandlerLoadArrayFloat();
		handlers[DALOAD] = new InstructionHandlerLoadArrayDouble();
		handlers[AALOAD] = new InstructionHandlerLoadArray();
		handlers[BALOAD] = new InstructionHandlerLoadArrayByte();
		handlers[CALOAD] = new InstructionHandlerLoadArrayChar();
		handlers[SALOAD] = new InstructionHandlerLoadArrayShort();
		handlers[ISTORE] = new InstructionHandlerStoreInt();
		handlers[LSTORE] = new InstructionHandlerStoreLong();
		handlers[FSTORE] = new InstructionHandlerStoreFloat();
		handlers[DSTORE] = new InstructionHandlerStoreDouble();
		handlers[ASTORE] = new InstructionHandlerStore();
		handlers[POP] = new InstructionHandlerPop();
		handlers[POP2] = new InstructionHandlerPop2();
		handlers[DUP] = new InstructionHandlerDup();
		handlers[DUP_X1] = new InstructionHandlerDupX1();
		handlers[DUP2_X2] = new InstructionHandlerDupX2();
		handlers[DUP2] = new InstructionHandlerDup2();
		handlers[DUP2_X1] = new InstructionHandlerDup2X1();
		handlers[DUP2_X2] = new InstructionHandlerDup2X2();
		handlers[SWAP] = new InstructionHandlerSwap();
		handlers[IADD] = new InstructionHandlerAddInt();
		handlers[LADD] = new InstructionHandlerAddLong();
		handlers[FADD] = new InstructionHandlerAddFloat();
		handlers[DADD] = new InstructionHandlerAddDouble();
		handlers[ISUB] = new InstructionHandlerSubInt();
		handlers[LSUB] = new InstructionHandlerSubLong();
		handlers[FSUB] = new InstructionHandlerSubFloat();
		handlers[DSUB] = new InstructionHandlerSubDouble();
		handlers[IMUL] = new InstructionHandlerMulInt();
		handlers[LMUL] = new InstructionHandlerMulLong();
		handlers[FMUL] = new InstructionHandlerMulFloat();
		handlers[DMUL] = new InstructionHandlerMulDouble();
		handlers[IDIV] = new InstructionHandlerDivInt();
		handlers[LDIV] = new InstructionHandlerDivLong();
		handlers[FDIV] = new InstructionHandlerDivFloat();
		handlers[DDIV] = new InstructionHandlerDivDouble();
		handlers[IREM] = new InstructionHandlerRemInt();
		handlers[LREM] = new InstructionHandlerRemLong();
		handlers[FREM] = new InstructionHandlerRemFloat();
		handlers[DREM] = new InstructionHandlerRemDouble();
		handlers[INEG] = new InstructionHandlerNegativeInt();
		handlers[LNEG] = new InstructionHandlerNegativeLong();
		handlers[FNEG] = new InstructionHandlerNegativeFloat();
		handlers[DNEG] = new InstructionHandlerNegativeDouble();
		handlers[ISHL] = new InstructionHandlerShlInt();
		handlers[LSHL] = new InstructionHandlerShlLong();
		handlers[ISHR] = new InstructionHandlerShrInt();
		handlers[LSHR] = new InstructionHandlerShrLong();
		handlers[IUSHR] = new InstructionHandlerUShrInt();
		handlers[LUSHR] = new InstructionHandlerUShrLong();
		handlers[IAND] = new InstructionHandlerAndInt();
		handlers[LAND] = new InstructionHandlerAndLong();
		handlers[IOR] = new InstructionHandlerOrInt();
		handlers[LOR] = new InstructionHandlerOrLong();
		handlers[IXOR] = new InstructionHandlerXorInt();
		handlers[LXOR] = new InstructionHandlerXorLong();
		handlers[IINC] = new InstructionHandlerIncInt();
		handlers[I2L] = new InstructionHandlerIntToLong();
		handlers[I2F] = new InstructionHandlerIntToFloat();
		handlers[I2D] = new InstructionHandlerIntToDouble();
		handlers[L2I] = new InstructionHandlerLongToInt();
		handlers[L2F] = new InstructionHandlerLongToFloat();
		handlers[L2D] = new InstructionHandlerLongToDouble();
		handlers[F2I] = new InstructionHandlerFloatToInt();
		handlers[F2L] = new InstructionHandlerFloatToLong();
		handlers[F2D] = new InstructionHandlerFloatToDouble();
		handlers[D2I] = new InstructionHandlerDoubleToInt();
		handlers[D2L] = new InstructionHandlerDoubleToLong();
		handlers[D2F] = new InstructionHandlerDoubleToFloat();
		handlers[I2B] = new InstructionHandlerIntToByte();
		handlers[I2C] = new InstructionHandlerIntToChar();
		handlers[I2S] = new InstructionHandlerIntToShort();
		HANDLERS = handlers;
	}
}
